name: CI and CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write  # Required to push Docker images to Docker Hub
  id-token: write  # Required for Azure deployment 

jobs:
  ci_pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12.3]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          .venv
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      run: |
        pytest

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: ci_pipeline
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Generate Date-Based Tag
      id: generate_date
      run: |
        DATE_TAG=$(date +%Y%m%d%H%M%S)
        echo "DATE_TAG=$DATE_TAG" >> $GITHUB_ENV
      # Sets the date-based tag as an environment variable for subsequent steps

    - name: Build Docker images
      run: |
        docker build -f Dockerfile.data -t $DOCKER_USER/$REPO_NAME:data-${{ env.DATE_TAG }} .
        docker build -f Dockerfile.flask -t $DOCKER_USER/$REPO_NAME:flask-${{ env.DATE_TAG }} .
        docker build -f Dockerfile.streamlit -t $DOCKER_USER/$REPO_NAME:streamlit-${{ env.DATE_TAG }} .

    - name: Log in to Docker Hub
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

    - name: Push Docker images
      run: |
        docker push $DOCKER_USER/$REPO_NAME:data-${{ env.DATE_TAG }}
        docker push $DOCKER_USER/$REPO_NAME:flask-${{ env.DATE_TAG }}
        docker push $DOCKER_USER/$REPO_NAME:streamlit-${{ env.DATE_TAG }}
